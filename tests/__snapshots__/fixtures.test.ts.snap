// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures (JSON) "svg-props/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null,
  "rest_props": {
    "type": "Element",
    "name": "svg"
  }
}"
`;

exports[`fixtures (JSON) "slots-named/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "text",
      "kind": "let",
      "type": "string",
      "value": "\"\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "fallback": "Default text",
      "slot_props": "{}"
    },
    {
      "name": "bold heading",
      "default": false,
      "fallback": "{text}",
      "slot_props": "{ text: string }"
    },
    {
      "name": "subheading",
      "default": false,
      "fallback": "{text}",
      "slot_props": "{ text: string }"
    },
    {
      "name": "text",
      "default": false,
      "fallback": "{text}",
      "slot_props": "{ text: string }"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "generics-multiple/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "headers",
      "kind": "let",
      "type": "ReadonlyArray<DataTableHeader<Row, Header>>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "rows",
      "kind": "let",
      "type": "ReadonlyArray<Row>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ headers: ReadonlyArray<DataTableHeader<Row, Header>>, rows: ReadonlyArray<Row> }"
    }
  ],
  "events": [],
  "typedefs": [
    {
      "type": "{ id: string | number; [key: string]: any; }",
      "name": "DataTableRow",
      "ts": "interface DataTableRow { id: string | number; [key: string]: any; }"
    },
    {
      "type": "Exclude<keyof Row, \"id\">",
      "name": "DataTableKey<Row>",
      "ts": "type DataTableKey<Row> = Exclude<keyof Row, \"id\">"
    },
    {
      "type": "{ key: DataTableKey<Row>; value: Header; }",
      "name": "DataTableHeader<Row=DataTableRow,Header=DataTableRow>",
      "ts": "interface DataTableHeader<Row=DataTableRow,Header=DataTableRow> { key: DataTableKey<Row>; value: Header; }"
    }
  ],
  "generics": [
    "Row,Header",
    "Row extends DataTableRow = DataTableRow, Header extends DataTableRow = DataTableRow"
  ]
}"
`;

exports[`fixtures (JSON) "dispatched-events-dynamic/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [
    {
      "type": "dispatched",
      "name": "KEY",
      "detail": "{key: string;}"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "function-declaration/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "fnA",
      "kind": "let",
      "type": "() => {}",
      "value": "() => {}",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "fnB",
      "kind": "const",
      "type": "() => {}",
      "value": "() => {}",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "add",
      "kind": "function",
      "type": "() => any",
      "value": "() => {     return a + b;   }",
      "isFunction": true,
      "isFunctionDeclaration": true,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "multiply",
      "kind": "function",
      "description": "Multiplies two numbers",
      "type": "(a: number, b: number) => number",
      "value": "() => {     return a * b;   }",
      "isFunction": true,
      "isFunctionDeclaration": true,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "forwarded-events/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [
    {
      "type": "forwarded",
      "name": "click",
      "element": "button"
    },
    {
      "type": "forwarded",
      "name": "focus",
      "element": "button"
    },
    {
      "type": "forwarded",
      "name": "blur",
      "element": "button"
    },
    {
      "type": "forwarded",
      "name": "mouseover",
      "element": "h1"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "mixed-events/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [
    {
      "type": "dispatched",
      "name": "custom-focus",
      "detail": "FocusEvent | number"
    },
    {
      "type": "dispatched",
      "name": "blur",
      "detail": "FocusEvent | CustomEvent<FocusEvent>"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "infer-basic/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "ref",
      "kind": "let",
      "value": "null",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "propBool",
      "kind": "let",
      "type": "boolean",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": true
    },
    {
      "name": "propString",
      "kind": "let",
      "type": "string",
      "value": "\"\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "name",
      "kind": "let",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    },
    {
      "name": "id",
      "kind": "let",
      "type": "string",
      "value": "\"\" + Math.random().toString(36)",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "propConst",
      "kind": "const",
      "type": "{ [\"1\"]: true }",
      "value": "{ [\"1\"]: true }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "fn",
      "kind": "function",
      "type": "() => any",
      "value": "() => {     localBool = !localBool;   }",
      "isFunction": true,
      "isFunctionDeclaration": true,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "fallback": "{name}",
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "empty-export/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "typed-slots/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "prop",
      "kind": "let",
      "type": "number",
      "value": "0",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ prop: number; doubled: number; }"
    },
    {
      "name": "description",
      "default": false,
      "slot_props": "{ props: { class?: string; } }",
      "description": "description"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "dispatched-events/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [
    {
      "type": "dispatched",
      "name": "hover"
    },
    {
      "type": "dispatched",
      "name": "destroy",
      "detail": "null"
    },
    {
      "type": "dispatched",
      "name": "destroy--component",
      "detail": "null"
    },
    {
      "type": "dispatched",
      "name": "destroy:component",
      "detail": "null"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "typedefs/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "prop1",
      "kind": "let",
      "type": "MyTypedef",
      "value": "{ [\"1\"]: true }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop2",
      "kind": "let",
      "type": "MyTypedefArray",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ prop1: MyTypedef, prop2: MyTypedefArray }"
    }
  ],
  "events": [],
  "typedefs": [
    {
      "type": "{ [key: string]: boolean; }",
      "name": "MyTypedef",
      "ts": "interface MyTypedef { [key: string]: boolean; }"
    },
    {
      "type": "MyTypedef[]",
      "name": "MyTypedefArray",
      "ts": "type MyTypedefArray = MyTypedef[]"
    }
  ],
  "generics": null
}"
`;

exports[`fixtures (JSON) "generics-with-rest-props/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "headers",
      "kind": "let",
      "type": "ReadonlyArray<DataTableHeader<Row>>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "rows",
      "kind": "let",
      "type": "ReadonlyArray<Row>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ headers: ReadonlyArray<DataTableHeader<Row>>, rows: ReadonlyArray<Row> }"
    }
  ],
  "events": [],
  "typedefs": [
    {
      "type": "{ id: string | number; [key: string]: any; }",
      "name": "DataTableRow",
      "ts": "interface DataTableRow { id: string | number; [key: string]: any; }"
    },
    {
      "type": "Exclude<keyof Row, \"id\">",
      "name": "DataTableKey<Row>",
      "ts": "type DataTableKey<Row> = Exclude<keyof Row, \"id\">"
    },
    {
      "type": "{ key: DataTableKey<Row>; value: string; }",
      "name": "DataTableHeader<Row=DataTableRow>",
      "ts": "interface DataTableHeader<Row=DataTableRow> { key: DataTableKey<Row>; value: string; }"
    }
  ],
  "generics": [
    "Row",
    "Row extends DataTableRow = DataTableRow"
  ],
  "rest_props": {
    "type": "Element",
    "name": "div"
  }
}"
`;

exports[`fixtures (JSON) "bind-this/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "ref",
      "kind": "let",
      "type": "null | HTMLButtonElement",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": true
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "dispatched-events-typed/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [
    {
      "type": "dispatched",
      "name": "hover",
      "detail": "{ h1: boolean; }",
      "description": "Fired on mouseover."
    },
    {
      "type": "dispatched",
      "name": "destroy",
      "detail": "null"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "input-events/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [
    {
      "type": "forwarded",
      "name": "input",
      "element": "input"
    },
    {
      "type": "forwarded",
      "name": "change",
      "element": "input"
    },
    {
      "type": "forwarded",
      "name": "paste",
      "element": "input"
    }
  ],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "required/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "prop",
      "kind": "let",
      "description": "@required ",
      "type": "boolean",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop1",
      "kind": "let",
      "description": "This is a comment.\n@required ",
      "type": "boolean | string",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop2",
      "kind": "let",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop3",
      "kind": "let",
      "type": "boolean",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ prop: boolean, prop1: boolean | string, prop2: any, prop3: boolean }"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "prop-comments/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "prop",
      "kind": "let",
      "description": "This is a comment.\n@see https://github.com/\n@deprecated this prop will be removed in the next major release.",
      "type": "boolean | string",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop1",
      "kind": "let",
      "description": "@see https://github.com/",
      "type": "boolean",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop2",
      "kind": "let",
      "description": "This is a comment.",
      "type": "boolean | string",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ prop: boolean | string, prop1: boolean, prop2: boolean | string }"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "renamed-props/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "class",
      "kind": "let",
      "description": "Just your average CSS class string.",
      "type": "string|null",
      "value": "\"test\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "infer-with-types/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "propBool",
      "kind": "let",
      "type": "boolean",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": true
    },
    {
      "name": "propString",
      "kind": "let",
      "type": "string",
      "value": "\"\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "name",
      "kind": "let",
      "type": "string",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    },
    {
      "name": "id",
      "kind": "let",
      "type": "string",
      "value": "\"\" + Math.random().toString(36)",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "propConst",
      "kind": "const",
      "type": "{ [key: string]: boolean; }",
      "value": "{ [\"1\"]: true }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "fn",
      "kind": "function",
      "type": "() => any",
      "value": "() => {     localBool = !localBool;   }",
      "isFunction": true,
      "isFunctionDeclaration": true,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "fallback": "{name}",
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "context-module/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "a",
      "kind": "const",
      "type": "string",
      "value": "\"\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    }
  ],
  "moduleExports": [
    {
      "name": "bool",
      "kind": "const",
      "type": "string",
      "value": "\"\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "a",
      "kind": "const",
      "type": "{ b: 4 }",
      "value": "{ b: 4 }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "e",
      "kind": "const",
      "description": "Description for e",
      "type": "{ [key: string]: any; }",
      "value": "{ b: 4 }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "log",
      "kind": "function",
      "description": "Log something",
      "type": "(message: string) => void",
      "value": "() => {     console.log(message);   }",
      "isFunction": true,
      "isFunctionDeclaration": true,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "b",
      "kind": "const",
      "type": "() => {}",
      "value": "() => {}",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "b2",
      "kind": "const",
      "type": "() => () => {}",
      "value": "() => () => {}",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    },
    {
      "name": "b3",
      "kind": "const",
      "type": "() => () => false",
      "value": "() => () => false",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": true,
      "reactive": false
    }
  ],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "rest-props-multiple/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "type",
      "kind": "let",
      "type": " \"ordered\" | \"unordered\" ",
      "value": "\"ordered\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null,
  "rest_props": {
    "type": "Element",
    "name": "ul | ol"
  }
}"
`;

exports[`fixtures (JSON) "no-props/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "component-comment-single/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null,
  "componentComment": " Component comment"
}"
`;

exports[`fixtures (JSON) "bind-this-multiple/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "ref",
      "kind": "let",
      "type": "null | HTMLButtonElement | HTMLHeadingElement",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": true
    },
    {
      "name": "ref2",
      "kind": "let",
      "type": "null | HTMLDivElement",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": true
    },
    {
      "name": "propBool",
      "kind": "let",
      "type": "boolean",
      "value": "false",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "typedef/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "id",
      "kind": "let",
      "type": "string",
      "value": "\"id-\" + Math.random().toString(36)",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop1",
      "kind": "let",
      "type": "MyTypedef",
      "value": "{ [\"1\"]: true }",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ prop1: MyTypedef }"
    }
  ],
  "events": [],
  "typedefs": [
    {
      "type": "{ [key: string]: boolean; }",
      "name": "MyTypedef",
      "ts": "interface MyTypedef { [key: string]: boolean; }"
    }
  ],
  "generics": null
}"
`;

exports[`fixtures (JSON) "rest-props-simple/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null,
  "rest_props": {
    "type": "Element",
    "name": "h1"
  }
}"
`;

exports[`fixtures (JSON) "anchor-props/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null,
  "rest_props": {
    "type": "Element",
    "name": "a"
  }
}"
`;

exports[`fixtures (JSON) "component-comment-multi/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null,
  "componentComment": "\n@example\n<div>\n  Component comment\n</div>"
}"
`;

exports[`fixtures (JSON) "slots-spread/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "fallback": "Default text",
      "slot_props": "{}"
    },
    {
      "name": "text",
      "default": false,
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "slots-spread-typed/input.svelte" 1`] = `
"{
  "props": [],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "fallback": "Default text",
      "slot_props": "{ a: number; }"
    },
    {
      "name": "text",
      "default": false,
      "slot_props": "{ a: number; }"
    }
  ],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "typed-props/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "prop1",
      "kind": "let",
      "description": "prop1 description 1\nprop1 description 2",
      "type": "string",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop2",
      "kind": "let",
      "description": "prop2 description 1\nprop2 description 2",
      "value": "null",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop3",
      "kind": "let",
      "type": "4 | '4'",
      "value": "4",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "prop4",
      "kind": "let",
      "type": "\"red\" | \"blue\"",
      "value": "\"red\"",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [],
  "events": [],
  "typedefs": [],
  "generics": null
}"
`;

exports[`fixtures (JSON) "generics/input.svelte" 1`] = `
"{
  "props": [
    {
      "name": "headers",
      "kind": "let",
      "type": "ReadonlyArray<DataTableHeader<Row>>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "rows",
      "kind": "let",
      "type": "ReadonlyArray<Row>",
      "value": "[]",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    {
      "name": "__default__",
      "default": true,
      "slot_props": "{ headers: ReadonlyArray<DataTableHeader<Row>>, rows: ReadonlyArray<Row> }"
    }
  ],
  "events": [],
  "typedefs": [
    {
      "type": "{ id: string | number; [key: string]: any; }",
      "name": "DataTableRow",
      "ts": "interface DataTableRow { id: string | number; [key: string]: any; }"
    },
    {
      "type": "Exclude<keyof Row, \"id\">",
      "name": "DataTableKey<Row>",
      "ts": "type DataTableKey<Row> = Exclude<keyof Row, \"id\">"
    },
    {
      "type": "{ key: DataTableKey<Row>; value: string; }",
      "name": "DataTableHeader<Row=DataTableRow>",
      "ts": "interface DataTableHeader<Row=DataTableRow> { key: DataTableKey<Row>; value: string; }"
    }
  ],
  "generics": [
    "Row",
    "Row extends DataTableRow = DataTableRow"
  ]
}"
`;

exports[`fixtures (TypeScript) "svg-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";
import type { SvelteHTMLElements } from "svelte/elements";

type RestProps = SvelteHTMLElements["svg"];

type $Props = {
  [key: \`data-${string}\`]: any;
};

export type SvgPropsProps = Omit<RestProps, keyof $Props> & $Props;

export default class SvgProps extends SvelteComponentTyped<SvgPropsProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "slots-named/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type SlotsNamedProps = {
  /**
   * @default ""
   */
  text?: string;
};

export default class SlotsNamed extends SvelteComponentTyped<
  SlotsNamedProps,
  Record<string, any>,
  { default: {}; ["bold heading"]: { text: string }; subheading: { text: string }; text: { text: string } }
> {}
"
`;

exports[`fixtures (TypeScript) "generics-multiple/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export interface DataTableRow {
  id: string | number;
  [key: string]: any;
}

export type DataTableKey<Row> = Exclude<keyof Row, "id">;

export interface DataTableHeader<Row = DataTableRow, Header = DataTableRow> {
  key: DataTableKey<Row>;
  value: Header;
}

export type GenericsMultipleProps<Row, Header> = {
  /**
   * @default []
   */
  headers?: ReadonlyArray<DataTableHeader<Row, Header>>;

  /**
   * @default []
   */
  rows?: ReadonlyArray<Row>;
};

export default class GenericsMultiple<
  Row extends DataTableRow = DataTableRow,
  Header extends DataTableRow = DataTableRow
> extends SvelteComponentTyped<
  GenericsMultipleProps<Row, Header>,
  Record<string, any>,
  { default: { headers: ReadonlyArray<DataTableHeader<Row, Header>>; rows: ReadonlyArray<Row> } }
> {}
"
`;

exports[`fixtures (TypeScript) "dispatched-events-dynamic/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type DispatchedEventsDynamicProps = {};

export default class DispatchedEventsDynamic extends SvelteComponentTyped<
  DispatchedEventsDynamicProps,
  { KEY: CustomEvent<{ key: string }> },
  {}
> {}
"
`;

exports[`fixtures (TypeScript) "function-declaration/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type FunctionDeclarationProps = {
  /**
   * @default () => {}
   */
  fnA?: () => {};
};

export default class FunctionDeclaration extends SvelteComponentTyped<
  FunctionDeclarationProps,
  Record<string, any>,
  {}
> {
  fnB: () => {};

  add: () => any;

  /**
   * Multiplies two numbers
   */
  multiply: (a: number, b: number) => number;
}
"
`;

exports[`fixtures (TypeScript) "forwarded-events/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type ForwardedEventsProps = {};

export default class ForwardedEvents extends SvelteComponentTyped<
  ForwardedEventsProps,
  {
    click: WindowEventMap["click"];
    focus: WindowEventMap["focus"];
    blur: WindowEventMap["blur"];
    mouseover: WindowEventMap["mouseover"];
  },
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "mixed-events/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type MixedEventsProps = {};

export default class MixedEvents extends SvelteComponentTyped<
  MixedEventsProps,
  { ["custom-focus"]: CustomEvent<FocusEvent | number>; blur: FocusEvent | CustomEvent<FocusEvent> },
  {}
> {}
"
`;

exports[`fixtures (TypeScript) "infer-basic/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type InferBasicProps = {
  /**
   * @default null
   */
  ref?: undefined;

  /**
   * @default true
   */
  propBool?: boolean;

  /**
   * @default ""
   */
  propString?: string;

  /**
   * @default undefined
   */
  name: undefined;

  /**
   * @default "" + Math.random().toString(36)
   */
  id?: string;
};

export default class InferBasic extends SvelteComponentTyped<InferBasicProps, Record<string, any>, { default: {} }> {
  propConst: { ["1"]: true };

  fn: () => any;
}
"
`;

exports[`fixtures (TypeScript) "empty-export/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type EmptyExportProps = {};

export default class EmptyExport extends SvelteComponentTyped<EmptyExportProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "typed-slots/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type TypedSlotsProps = {
  /**
   * @default 0
   */
  prop?: number;
};

export default class TypedSlots extends SvelteComponentTyped<
  TypedSlotsProps,
  Record<string, any>,
  {
    default: { prop: number; doubled: number };
    /** description */
    description: { props: { class?: string } };
  }
> {}
"
`;

exports[`fixtures (TypeScript) "dispatched-events/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type DispatchedEventsProps = {};

export default class DispatchedEvents extends SvelteComponentTyped<
  DispatchedEventsProps,
  {
    hover: CustomEvent<any>;
    destroy: CustomEvent<null>;
    ["destroy--component"]: CustomEvent<null>;
    ["destroy:component"]: CustomEvent<null>;
  },
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "typedefs/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export interface MyTypedef {
  [key: string]: boolean;
}

export type MyTypedefArray = MyTypedef[];

export type TypedefsProps = {
  /**
   * @default { ["1"]: true }
   */
  prop1?: MyTypedef;

  /**
   * @default []
   */
  prop2?: MyTypedefArray;
};

export default class Typedefs extends SvelteComponentTyped<
  TypedefsProps,
  Record<string, any>,
  { default: { prop1: MyTypedef; prop2: MyTypedefArray } }
> {}
"
`;

exports[`fixtures (TypeScript) "generics-with-rest-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";
import type { SvelteHTMLElements } from "svelte/elements";

export interface DataTableRow {
  id: string | number;
  [key: string]: any;
}

export type DataTableKey<Row> = Exclude<keyof Row, "id">;

export interface DataTableHeader<Row = DataTableRow> {
  key: DataTableKey<Row>;
  value: string;
}

type RestProps = SvelteHTMLElements["div"];

type $Props<Row> = {
  /**
   * @default []
   */
  headers?: ReadonlyArray<DataTableHeader<Row>>;

  /**
   * @default []
   */
  rows?: ReadonlyArray<Row>;

  [key: \`data-${string}\`]: any;
};

export type GenericsWithRestPropsProps<Row> = Omit<RestProps, keyof $Props<Row>> & $Props<Row>;

export default class GenericsWithRestProps<Row extends DataTableRow = DataTableRow> extends SvelteComponentTyped<
  GenericsWithRestPropsProps<Row>,
  Record<string, any>,
  { default: { headers: ReadonlyArray<DataTableHeader<Row>>; rows: ReadonlyArray<Row> } }
> {}
"
`;

exports[`fixtures (TypeScript) "bind-this/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type BindThisProps = {
  /**
   * @default undefined
   */
  ref: null | HTMLButtonElement;
};

export default class BindThis extends SvelteComponentTyped<BindThisProps, Record<string, any>, { default: {} }> {}
"
`;

exports[`fixtures (TypeScript) "dispatched-events-typed/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type DispatchedEventsTypedProps = {};

export default class DispatchedEventsTyped extends SvelteComponentTyped<
  DispatchedEventsTypedProps,
  {
    /** Fired on mouseover. */ hover: CustomEvent<{ h1: boolean }>;
    destroy: CustomEvent<null>;
  },
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "input-events/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type InputEventsProps = {};

export default class InputEvents extends SvelteComponentTyped<
  InputEventsProps,
  { input: WindowEventMap["input"]; change: WindowEventMap["change"]; paste: WindowEventMap["paste"] },
  {}
> {}
"
`;

exports[`fixtures (TypeScript) "required/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type RequiredProps = {
  /**
   * @required
   * @default true
   */
  prop?: boolean;

  /**
   * This is a comment.
   * @required
   * @default true
   */
  prop1?: boolean | string;

  /**
   * @default undefined
   */
  prop2: undefined;

  /**
   * @default undefined
   */
  prop3: boolean;
};

export default class Required extends SvelteComponentTyped<
  RequiredProps,
  Record<string, any>,
  { default: { prop: boolean; prop1: boolean | string; prop2: any; prop3: boolean } }
> {}
"
`;

exports[`fixtures (TypeScript) "prop-comments/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type PropCommentsProps = {
  /**
   * This is a comment.
   * @see https://github.com/
   * @deprecated this prop will be removed in the next major release.
   * @default true
   */
  prop?: boolean | string;

  /**
   * @see https://github.com/
   * @default true
   */
  prop1?: boolean;

  /**
   * This is a comment.
   * @default true
   */
  prop2?: boolean | string;
};

export default class PropComments extends SvelteComponentTyped<
  PropCommentsProps,
  Record<string, any>,
  { default: { prop: boolean | string; prop1: boolean; prop2: boolean | string } }
> {}
"
`;

exports[`fixtures (TypeScript) "renamed-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type RenamedPropsProps = {
  /**
   * Just your average CSS class string.
   * @default "test"
   */
  class?: string | null;
};

export default class RenamedProps extends SvelteComponentTyped<RenamedPropsProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "infer-with-types/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type InferWithTypesProps = {
  /**
   * @default true
   */
  propBool?: boolean;

  /**
   * @default ""
   */
  propString?: string;

  /**
   * @default undefined
   */
  name: string;

  /**
   * @default "" + Math.random().toString(36)
   */
  id?: string;
};

export default class InferWithTypes extends SvelteComponentTyped<
  InferWithTypesProps,
  Record<string, any>,
  { default: {} }
> {
  propConst: { [key: string]: boolean };

  fn: () => any;
}
"
`;

exports[`fixtures (TypeScript) "context-module/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type bool = string;

export type a = { b: 4 };

/**
 * Description for e
 */
export type e = { [key: string]: any };

/**
 * Log something
 */
export declare function log(message: string): void;

export declare function b(): {};

export declare function b2(): () => {};

export declare function b3(): () => false;

export type ContextModuleProps = {};

export default class ContextModule extends SvelteComponentTyped<ContextModuleProps, Record<string, any>, {}> {
  a: string;
}
"
`;

exports[`fixtures (TypeScript) "rest-props-multiple/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";
import type { SvelteHTMLElements } from "svelte/elements";

type RestProps = SvelteHTMLElements["ul"] & SvelteHTMLElements["ol"];

type $Props = {
  /**
   * @default "ordered"
   */
  type?: "ordered" | "unordered";

  [key: \`data-${string}\`]: any;
};

export type RestPropsMultipleProps = Omit<RestProps, keyof $Props> & $Props;

export default class RestPropsMultiple extends SvelteComponentTyped<RestPropsMultipleProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "no-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type NoPropsProps = {};

export default class NoProps extends SvelteComponentTyped<NoPropsProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "component-comment-single/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type ComponentCommentSingleProps = {};

/** Component comment */
export default class ComponentCommentSingle extends SvelteComponentTyped<
  ComponentCommentSingleProps,
  Record<string, any>,
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "bind-this-multiple/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type BindThisMultipleProps = {
  /**
   * @default undefined
   */
  ref: null | HTMLButtonElement | HTMLHeadingElement;

  /**
   * @default undefined
   */
  ref2: null | HTMLDivElement;

  /**
   * @default false
   */
  propBool?: boolean;
};

export default class BindThisMultiple extends SvelteComponentTyped<
  BindThisMultipleProps,
  Record<string, any>,
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "typedef/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export interface MyTypedef {
  [key: string]: boolean;
}

export type TypedefProps = {
  /**
   * @default "id-" + Math.random().toString(36)
   */
  id?: string;

  /**
   * @default { ["1"]: true }
   */
  prop1?: MyTypedef;
};

export default class Typedef extends SvelteComponentTyped<
  TypedefProps,
  Record<string, any>,
  { default: { prop1: MyTypedef } }
> {}
"
`;

exports[`fixtures (TypeScript) "rest-props-simple/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";
import type { SvelteHTMLElements } from "svelte/elements";

type RestProps = SvelteHTMLElements["h1"];

type $Props = {
  [key: \`data-${string}\`]: any;
};

export type RestPropsSimpleProps = Omit<RestProps, keyof $Props> & $Props;

export default class RestPropsSimple extends SvelteComponentTyped<RestPropsSimpleProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "anchor-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";
import type { SvelteHTMLElements } from "svelte/elements";

type RestProps = SvelteHTMLElements["a"];

type $Props = {
  [key: \`data-${string}\`]: any;
};

export type AnchorPropsProps = Omit<RestProps, keyof $Props> & $Props;

export default class AnchorProps extends SvelteComponentTyped<AnchorPropsProps, Record<string, any>, { default: {} }> {}
"
`;

exports[`fixtures (TypeScript) "component-comment-multi/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type ComponentCommentMultiProps = {};

/**
 * @example
 * <div>
 *   Component comment
 * </div>
 */
export default class ComponentCommentMulti extends SvelteComponentTyped<
  ComponentCommentMultiProps,
  Record<string, any>,
  { default: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "slots-spread/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type SlotsSpreadProps = {};

export default class SlotsSpread extends SvelteComponentTyped<
  SlotsSpreadProps,
  Record<string, any>,
  { default: {}; text: {} }
> {}
"
`;

exports[`fixtures (TypeScript) "slots-spread-typed/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type SlotsSpreadTypedProps = {};

export default class SlotsSpreadTyped extends SvelteComponentTyped<
  SlotsSpreadTypedProps,
  Record<string, any>,
  { default: { a: number }; text: { a: number } }
> {}
"
`;

exports[`fixtures (TypeScript) "typed-props/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export type TypedPropsProps = {
  /**
   * prop1 description 1
   * prop1 description 2
   * @default undefined
   */
  prop1: string;

  /**
   * prop2 description 1
   * prop2 description 2
   * @default null
   */
  prop2?: undefined;

  /**
   * @default 4
   */
  prop3?: 4 | "4";

  /**
   * @default "red"
   */
  prop4?: "red" | "blue";
};

export default class TypedProps extends SvelteComponentTyped<TypedPropsProps, Record<string, any>, {}> {}
"
`;

exports[`fixtures (TypeScript) "generics/input.svelte" 1`] = `
"import type { SvelteComponentTyped } from "svelte";

export interface DataTableRow {
  id: string | number;
  [key: string]: any;
}

export type DataTableKey<Row> = Exclude<keyof Row, "id">;

export interface DataTableHeader<Row = DataTableRow> {
  key: DataTableKey<Row>;
  value: string;
}

export type GenericsProps<Row> = {
  /**
   * @default []
   */
  headers?: ReadonlyArray<DataTableHeader<Row>>;

  /**
   * @default []
   */
  rows?: ReadonlyArray<Row>;
};

export default class Generics<Row extends DataTableRow = DataTableRow> extends SvelteComponentTyped<
  GenericsProps<Row>,
  Record<string, any>,
  { default: { headers: ReadonlyArray<DataTableHeader<Row>>; rows: ReadonlyArray<Row> } }
> {}
"
`;
